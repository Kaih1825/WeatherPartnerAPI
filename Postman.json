{
	"info": {
		"_postman_id": "d4bdcc5e-7f13-4785-a1e4-e184213516b3",
		"name": "Weather Partner RESTful API",
		"description": "# Weather Partner API 文件\n\n歡迎使用 Weather Partner API 文件！這個 API 讓您可以與天氣資料進行互動。\n\n## 基礎 URL\n\n所有端點的基礎 URL 為：`http://your-base-url.com`\n\n## 端點\n\n### `POST /data`\n\n- 描述：將天氣資料發送至伺服器。\n- 請求主體：\n    \n    - `location`（字串，必填）：位置名稱\n    - `temp`（字串，必填）：溫度\n    - `wet`（字串，必填）：濕度\n    - `purple`（字串，必填）：紫外線指數\n    - `water`（字串，必填）：是否有下雨\n        \n- 回應：\n    - 狀態碼：200 OK\n    - jsonCopy code{ \"message\": \"使用者成功\", \"uuid\": \"<生成的 UUID>\"}\n\n### `PUT /data/`\n\n- 描述：透過 UUID 更新天氣資料。\n- 路徑參數：\n    - `uuid`（字串，必填）：資料的唯一識別碼\n- 請求主體：同 POST `/data`\n- 回應：\n    - 狀態碼：200 OK\n    - jsonCopy code{ \"message\": \"使用者成功\", \"uuid\": \"<更新的 UUID>\"}\n\n### `GET /data`\n\n- 描述：獲取所有天氣資料。\n- 回應：\n    - 狀態碼：200 OK\n    - jsonCopy code{ \"data\": \\[ { \"uuid\": \"\", \"location\": \"<位置>\" }, // 更多資料... \\]}\n\n### `GET /data/`\n\n- 描述：透過 UUID 獲取天氣資料。\n- 路徑參數：\n    - `uuid`（字串，必填）：資料的唯一識別碼\n- 回應：\n    \n    - 狀態碼：200 OK\n    - jsonCopy code{ \"data\": \\[ { \"uuid\": \"\", \"time\": \"<時間戳記>\", \"location\": \"<位置>\", \"temp\": \"<溫度>\", \"wet\": \"<濕度>\", \"purple\": \"<紫外線指數>\", \"water\": \"<是否有下雨>\" } \\]}\n        \n\n### `DELETE /data/`\n\n- 描述：透過 UUID 刪除天氣資料。\n- 路徑參數：\n    - `uuid`（字串，必填）：資料的唯一識別碼\n- 回應：\n    \n    - 狀態碼：200 OK\n    - jsonCopy code{ \"message\": \"UUID 為 '' 的資料已成功刪除\"}",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25745749"
	},
	"item": [
		{
			"name": "Get All data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:8888/data",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8888",
					"path": [
						"data"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Post data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"location\": \"三重\",\n    \"temp\": \"21.5\",\n    \"wet\": \"61\",\n    \"purple\": \"5\",\n    \"water\": \"Yes\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "127.0.0.1:8888/data",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8888",
					"path": [
						"data"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Update data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"location\": \"abc\",\n    \"temp\": \"21.5\",\n    \"wet\": \"61\",\n    \"purple\": \"0\",\n    \"water\": \"Yes\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "127.0.0.1:8888/data/2b4fa87c-910a-11ee-a166-6c9466496cbc",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8888",
					"path": [
						"data",
						"2b4fa87c-910a-11ee-a166-6c9466496cbc"
					]
				},
				"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
			},
			"response": []
		},
		{
			"name": "Delete data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "127.0.0.1:8888/data/9f242cdb-9109-11ee-a420-6c9466496cbc",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8888",
					"path": [
						"data",
						"9f242cdb-9109-11ee-a420-6c9466496cbc"
					]
				},
				"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
			},
			"response": []
		},
		{
			"name": "Get Data",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:8888/data/2b4fa87c-910a-11ee-a166-6c9466496cbc",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8888",
					"path": [
						"data",
						"2b4fa87c-910a-11ee-a166-6c9466496cbc"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}